openapi: 3.0.0
components:
  examples: {}
  headers: {}
  parameters: {}
  requestBodies: {}
  responses: {}
  schemas:
    GeoCoordinate:
      properties:
        latitude:
          type: number
          format: double
        longitude:
          type: number
          format: double
      required:
        - latitude
        - longitude
      type: object
      additionalProperties: false
    Floor:
      properties:
        buildingCode:
          type: string
        level:
          type: string
      required:
        - buildingCode
        - level
      type: object
      additionalProperties: false
    RoomType:
      type: string
      enum:
        - ""
        - Default
        - Corridor
        - Auditorium
        - Office
        - Classroom
        - Operational
        - Conference
        - Study
        - Laboratory
        - Computer Lab
        - Studio
        - Workshop
        - Vestibule
        - Storage
        - Restroom
        - Stairs
        - Elevator
        - Ramp
        - Dining
        - Food
        - Store
        - Library
        - Sport
        - Parking
        - Inaccessible
    GeoRoom:
      properties:
        labelPosition:
          $ref: "#/components/schemas/GeoCoordinate"
          description: The coordinates of the label of the room
        floor:
          $ref: "#/components/schemas/Floor"
          description: the floor that the room is on
        type:
          $ref: "#/components/schemas/RoomType"
          description: The type of the room
        alias:
          type: string
          description: |-
            The name under which the room is known (e.g. 'McConomy Auditorium')
            The one that will be displayed.
        points:
          items:
            items:
              $ref: "#/components/schemas/GeoCoordinate"
            type: array
          type: array
          description: Points to display on map
      required:
        - labelPosition
        - floor
        - type
        - points
      type: object
      additionalProperties: false
    Record_string.GeoRoom_:
      properties: {}
      additionalProperties:
        $ref: "#/components/schemas/GeoRoom"
      type: object
      description: Construct a type with a set of properties K of type T
    GeoRooms:
      $ref: "#/components/schemas/Record_string.GeoRoom_"
    Building:
      properties:
        code:
          type: string
        name:
          type: string
        isMapped:
          type: boolean
        defaultOrdinal:
          type: number
          format: double
          nullable: true
        defaultFloor:
          type: string
          nullable: true
        floors:
          items:
            type: string
          type: array
        labelLatitude:
          type: number
          format: double
        labelLongitude:
          type: number
          format: double
        shape:
          items:
            items:
              $ref: "#/components/schemas/GeoCoordinate"
            type: array
          type: array
        hitbox:
          items:
            $ref: "#/components/schemas/GeoCoordinate"
          type: array
      required:
        - code
        - name
        - isMapped
        - defaultOrdinal
        - defaultFloor
        - floors
        - labelLatitude
        - labelLongitude
        - shape
        - hitbox
      type: object
      additionalProperties: false
    Record_string.Building_:
      properties: {}
      additionalProperties:
        $ref: "#/components/schemas/Building"
      type: object
      description: Construct a type with a set of properties K of type T
    Buildings:
      $ref: "#/components/schemas/Record_string.Building_"
  securitySchemes:
    oauth2:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://auth.slabs-dev.org/application/o/authorize/
          scopes: {}
info:
  title: "@cmumaps/server"
  version: 1.0.0
  license:
    name: ISC
  contact: {}
paths:
  /floors/{floorCode}/floorplan:
    get:
      operationId: GetFloorplan
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GeoRooms"
      security:
        - oauth2: []
      parameters:
        - in: path
          name: floorCode
          required: true
          schema:
            type: string
  /buildings:
    get:
      operationId: GetBuildings
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Buildings"
      security: []
      parameters: []
  /buildings/{buildingCode}/default-floor:
    get:
      operationId: GetDefaultFloor
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                type: string
      security: []
      parameters:
        - in: path
          name: buildingCode
          required: true
          schema:
            type: string
  /auth/userInfo:
    get:
      operationId: UserInfo
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                properties:
                  id:
                    type: string
                required:
                  - id
                type: object
      security:
        - oauth2: []
      parameters: []
servers:
  - url: /
